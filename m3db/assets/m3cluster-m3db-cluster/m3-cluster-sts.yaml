apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    operator.m3db.io/app: m3db
    operator.m3db.io/cluster: m3-cluster
  creationTimestamp: "2021-08-10T02:41:03Z"
  generation: 2
  labels:
    operator.m3db.io/app: m3db
    operator.m3db.io/cluster: m3-cluster
    operator.m3db.io/component: m3dbnode
    operator.m3db.io/isolation-group: group1
    operator.m3db.io/stateful-set: m3-cluster-rep0
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:operator.m3db.io/app: {}
          f:operator.m3db.io/cluster: {}
        f:labels:
          .: {}
          f:operator.m3db.io/app: {}
          f:operator.m3db.io/cluster: {}
          f:operator.m3db.io/component: {}
          f:operator.m3db.io/isolation-group: {}
          f:operator.m3db.io/stateful-set: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"7d1d828e-a2b5-4a20-a315-b391596daf47"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:podManagementPolicy: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:serviceName: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:operator.m3db.io/app: {}
              f:operator.m3db.io/cluster: {}
            f:labels:
              .: {}
              f:operator.m3db.io/app: {}
              f:operator.m3db.io/cluster: {}
              f:operator.m3db.io/component: {}
              f:operator.m3db.io/isolation-group: {}
              f:operator.m3db.io/stateful-set: {}
          f:spec:
            f:affinity:
              .: {}
              f:nodeAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution:
                  .: {}
                  f:nodeSelectorTerms: {}
              f:podAntiAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"m3-cluster-rep0"}:
                .: {}
                f:args: {}
                f:command: {}
                f:env:
                  .: {}
                  k:{"name":"M3CLUSTER_ENVIRONMENT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":7201,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":7203,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9000,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9001,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9002,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9003,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9004,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:capabilities:
                    .: {}
                    f:add: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/m3db/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/m3db/pod-identity"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/lib/m3db/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/lib/m3kv/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"cache"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
              k:{"name":"m3-configuration"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"pod-identity"}:
                .: {}
                f:downwardAPI:
                  .: {}
                  f:defaultMode: {}
                  f:items: {}
                f:name: {}
        f:updateStrategy:
          f:rollingUpdate:
            .: {}
            f:partition: {}
          f:type: {}
        f:volumeClaimTemplates: {}
    manager: m3db-operator
    operation: Update
    time: "2021-08-10T02:41:03Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"m3-cluster-rep0"}:
                f:volumeMounts:
                  k:{"mountPath":"/etcd-secret-tls"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etcd-tls"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:volumes:
              k:{"name":"etcd-secret-tls"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"etcd-tls"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
    manager: kubectl
    operation: Update
    time: "2021-08-10T02:44:34Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:collisionCount: {}
        f:currentReplicas: {}
        f:currentRevision: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updateRevision: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-08-10T02:45:40Z"
  name: m3-cluster-rep0
  namespace: m3db
  ownerReferences:
  - apiVersion: operator.m3db.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: m3dbcluster
    name: m3-cluster
    uid: 7d1d828e-a2b5-4a20-a315-b391596daf47
  resourceVersion: "10181386"
  selfLink: /apis/apps/v1/namespaces/m3db/statefulsets/m3-cluster-rep0
  uid: ccbe3234-66c2-4486-8ad0-b88588976859
spec:
  podManagementPolicy: Parallel
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      operator.m3db.io/app: m3db
      operator.m3db.io/cluster: m3-cluster
      operator.m3db.io/component: m3dbnode
      operator.m3db.io/isolation-group: group1
      operator.m3db.io/stateful-set: m3-cluster-rep0
  serviceName: m3dbnode-m3-cluster
  template:
    metadata:
      annotations:
        operator.m3db.io/app: m3db
        operator.m3db.io/cluster: m3-cluster
      creationTimestamp: null
      labels:
        operator.m3db.io/app: m3db
        operator.m3db.io/cluster: m3-cluster
        operator.m3db.io/component: m3dbnode
        operator.m3db.io/isolation-group: group1
        operator.m3db.io/stateful-set: m3-cluster-rep0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - node5
                - node7
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: operator.m3db.io/component
                operator: In
                values:
                - m3dbnode
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -f
        - /etc/m3db/m3.yml
        command:
        - m3dbnode
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: M3CLUSTER_ENVIRONMENT
          value: m3db/m3-cluster
        image: quay.io/m3db/m3dbnode:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 15
          httpGet:
            path: /health
            port: 9002
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: m3-cluster-rep0
        ports:
        - containerPort: 9000
          name: client
          protocol: TCP
        - containerPort: 9001
          name: cluster
          protocol: TCP
        - containerPort: 9002
          name: http-node
          protocol: TCP
        - containerPort: 9003
          name: http-cluster
          protocol: TCP
        - containerPort: 9004
          name: debug
          protocol: TCP
        - containerPort: 7201
          name: coordinator
          protocol: TCP
        - containerPort: 7203
          name: coord-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /bootstrappedinplacementornoplacement
            port: 9002
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources:
          limits:
            memory: 7301444403200m
          requests:
            memory: 7301444403200m
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/m3db/
          name: m3db-data
        - mountPath: /var/lib/m3kv/
          name: cache
        - mountPath: /etc/m3db/pod-identity
          name: pod-identity
        - mountPath: /etc/m3db/
          name: m3-configuration
        - mountPath: /etcd-tls
          name: etcd-tls
        - mountPath: /etcd-secret-tls
          name: etcd-secret-tls
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: cache
      - downwardAPI:
          defaultMode: 420
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.annotations['operator.m3db.io/pod-identity']
            path: identity
        name: pod-identity
      - configMap:
          defaultMode: 420
          name: m3db-config-map-m3-cluster
        name: m3-configuration
      - emptyDir: {}
        name: etcd-tls
      - name: etcd-secret-tls
        secret:
          defaultMode: 420
          secretName: etcd-tls
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: m3db-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs-storageclass
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  collisionCount: 0
  currentReplicas: 2
  currentRevision: m3-cluster-rep0-86b7996cc
  observedGeneration: 2
  readyReplicas: 1
  replicas: 2
  updateRevision: m3-cluster-rep0-86b7996cc
  updatedReplicas: 2
