# Source: m3coordinator/templates/m3coordinator-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    operator.m3db.io/app: m3db
    operator.m3db.io/cluster: m3-cluster
    operator.m3db.io/component: coordinator
    app: m3coordinator
  name: m3coordinator
  namespace: m3db
data:
  coordinator.yaml: |+
    logging:
      level: debug
      
    listenAddress: "0.0.0.0:7201"
    metrics:
      scope:
        prefix: "coordinator"
      prometheus:
        handlerPath: /metrics
        listenAddress: 0.0.0.0:7203 # until https://github.com/m3db/m3/issues/682 is resolved
      sanitization: prometheus
      samplingRate: 1.0
      extended: none
    clusters:
      - namespaces:
        - namespace: default
          type: unaggregated
          retention: 2h
        - namespace: metrics-10s_2d
          type: aggregated
          retention: 48h
          resolution: 10s
        client:
          config:
            service:
              env: m3db/m3-cluster
              zone: embedded
              service: m3db
              cacheDir: /var/lib/m3kv
              etcdClusters:
              - zone: embedded
                endpoints:
                - https://192.168.77.229:2379
                # TLS configuration
                tls:
                  # Certificiate authority path
                  caCrtPath: /etcd-secret-tls/ca.crt
                  # Certificate path
                  crtPath: /etcd-secret-tls/etcd-client.crt
                  # Key store path
                  keyPath: /etcd-secret-tls/etcd-client.key
                

    # This is for sending metrics to the remote m3aggregators
    downsample:
      remoteAggregator:
        client:
          type: m3msg
          m3msg:
            producer:
              writer:
                topicName: aggregator_ingest
                topicServiceOverride:
                  zone: embedded
                  environment: m3db/m3-cluster
                placement:
                  isStaged: true
                placementServiceOverride:
                  namespaces:
                    placement: /placement
                connection:
                  numConnections: 4
                messagePool:
                  size: 16384
                  watermark:
                    low: 0.2
                    high: 0.5

    # This is for configuring the ingestion server that will receive metrics from the m3aggregators on port 7507
    ingest:
      ingester:
        workerPoolSize: 10000
        opPool:
          size: 10000
        retry:
          maxRetries: 3
          jitter: true
        logSampleRate: 0.01
      m3msg:
        server:
          listenAddress: "0.0.0.0:7507"
          retry:
            maxBackoff: 10s
            jitter: true

    tagOptions:
      idScheme: quoted
---
# Source: m3coordinator/templates/m3coordinator-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    operator.m3db.io/app: m3db
    operator.m3db.io/cluster: m3-cluster
    operator.m3db.io/component: coordinator
    app: m3coordinator
  name: m3coordinator
  namespace: m3db
spec:
  ports:
    - name: coordinator
      port: 7201
      nodePort: 32555
      protocol: TCP
      targetPort: 7201
    - name: coord-debug
      port: 7203
      nodePort: 32556
      protocol: TCP
      targetPort: 7203
    - name: m3msg
      port: 7507
      protocol: TCP
      nodePort: 32557
      targetPort: 7507
  selector:
    app: m3coordinator
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: m3coordinator
  labels:
    operator.m3db.io/app: m3db
    operator.m3db.io/cluster: m3-cluster
    operator.m3db.io/component: coordinator
    app: m3coordinator
  namespace: m3db
spec:
  serviceName: "m3coordinator"
  replicas: 2
  selector:
    matchLabels:
      app: m3coordinator
  template:
    metadata:
      labels:
        operator.m3db.io/app: m3db
        operator.m3db.io/cluster: m3-cluster
        operator.m3db.io/component: coordinator
        app: m3coordinator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - node5
                      - node7
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - m3coordinator
                        - m3dbnode
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: m3coordinator
          image: quay.io/m3db/m3coordinator:latest
          args:
            - "-f"
            - "/etc/m3/coordinator.yaml"
          volumeMounts:
            - name: cache
              mountPath: /var/lib/m3kv/
            - name: config
              mountPath: /etc/m3
            - mountPath: /etcd-secret-tls/
              name: etcd-secret-tls
          imagePullPolicy: Always
          ports:
            - name: coordinator
              containerPort: 7201
              protocol: TCP
            - name: coord-debug
              containerPort: 7203
              protocol: TCP
            - name: m3msg
              containerPort: 7507
              protocol: TCP
          resources:
            limits:
              memory: 5Gi
            requests:
              memory: 5Gi
      volumes:
        - name: cache
          emptyDir: {}
        - name: config
          configMap:
            name: m3coordinator
        - name: etcd-secret-tls
          secret:
            secretName: etcd-tls
